{"version":3,"sources":["webpack:///path---html-next-steps-6874292d1b5859a9dd76.js","webpack:///./.cache/json/html-next-steps.json"],"names":["webpackJsonp","468","module","exports","data","markdownRemark","html","frontmatter","path","title","order","allMarkdownRemark","edges","node","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,wnvBAA86tBC,aAAs9CC,KAAA,mBAAAC,MAAA,kBAAAC,MAAA,IAA+DC,mBAAsBC,QAAUC,MAAQN,aAAeG,MAAA,EAAAF,KAAA,SAAAC,MAAA,iCAAmEI,MAAQN,aAAeG,MAAA,EAAAF,KAAA,YAAAC,MAAA,kCAAuEI,MAAQN,aAAeG,MAAA,EAAAF,KAAA,SAAAC,MAAA,cAAgDI,MAAQN,aAAeG,MAAA,EAAAF,KAAA,YAAAC,MAAA,uBAA4DI,MAAQN,aAAeG,MAAA,EAAAF,KAAA,mBAAAC,MAAA,sBAAkEI,MAAQN,aAAeG,MAAA,EAAAF,KAAA,aAAAC,MAAA,gBAAsDI,MAAQN,aAAeG,MAAA,EAAAF,KAAA,aAAAC,MAAA,gBAAsDI,MAAQN,aAAeG,MAAA,EAAAF,KAAA,aAAAC,MAAA,oCAA0EI,MAAQN,aAAeG,MAAA,EAAAF,KAAA,cAAAC,MAAA,iBAAwDI,MAAQN,aAAeG,MAAA,EAAAF,KAAA,gBAAAC,MAAA,yCAAkFI,MAAQN,aAAeG,MAAA,GAAAF,KAAA,oBAAAC,MAAA,0BAAwEI,MAAQN,aAAeG,MAAA,GAAAF,KAAA,4BAAAC,MAAA,+BAAqFI,MAAQN,aAAeG,MAAA,GAAAF,KAAA,uBAAAC,MAAA,0BAA2EI,MAAQN,aAAeG,MAAA,GAAAF,KAAA,sBAAAC,MAAA,yBAAyEI,MAAQN,aAAeG,MAAA,GAAAF,KAAA,OAAAC,MAAA,cAA+CI,MAAQN,aAAeG,MAAA,GAAAF,KAAA,cAAAC,MAAA,wCAAgFI,MAAQN,aAAeG,MAAA,GAAAF,KAAA,QAAAC,MAAA,WAA6CI,MAAQN,aAAeG,MAAA,GAAAF,KAAA,aAAAC,MAAA,gDAAuFI,MAAQN,aAAeG,MAAA,GAAAF,KAAA,gBAAAC,MAAA,mBAA6DI,MAAQN,aAAeG,MAAA,GAAAF,KAAA,QAAAC,MAAA,cAAgDI,MAAQN,aAAeG,MAAA,GAAAF,KAAA,aAAAC,MAAA,yBAAgEI,MAAQN,aAAeG,MAAA,GAAAF,KAAA,kBAAAC,MAAA,uBAAkEK","file":"path---html-next-steps-6874292d1b5859a9dd76.js","sourcesContent":["webpackJsonp([246320047195911],{\n\n/***/ 468:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>We just discussed what the basic building block of HTML is: tags. We're going to explore a bit more about what you can do with tags and then we'll move on to CSS.</p>\\n<h2 id=\\\"attributes\\\"><a href=\\\"#attributes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Attributes</h2>\\n<p>Let's start with a text <code class=\\\"language-text\\\">input</code> tag. There are several types of <code class=\\\"language-text\\\">input</code>s that we discussed in the previous section: text, color, checkboxes, radio buttons, etc. How can the browser tell which is meant to be what? HTML attributes! Attributes are additional pieces of information that you can attach to HTML tags. We're going to use the <code class=\\\"language-text\\\">type</code> attribute to pass that to the browser.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>checkbox<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>color<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>file<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">type</code> is considered an attribute. Different tags have different attributes that they care about. For example, the <code class=\\\"language-text\\\">type</code> attribute is not useful with <code class=\\\"language-text\\\">p</code>, <code class=\\\"language-text\\\">div</code>, <code class=\\\"language-text\\\">h1</code>, etc. You can still put a <code class=\\\"language-text\\\">type</code> attribute on these tags; they'll just ignore them.</p>\\n<p>Exploring more on <code class=\\\"language-text\\\">input</code>s (since they have a bunch of attributes,) here are some interesting ones:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>: Code :</th>\\n<th align=\\\"center\\\">Example</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code class=\\\"language-text\\\">&lt;input value=&quot;This is a pre-filled value&quot; /&gt;</code></td>\\n<td align=\\\"center\\\"><input value=\\\"This is a pre-filled value\\\" /></td>\\n</tr>\\n<tr>\\n<td><code class=\\\"language-text\\\">&lt;input placeholder=&quot;This is a placeholder&quot; /&gt;</code></td>\\n<td align=\\\"center\\\"><input placeholder=\\\"This is a placeholder\\\" /></td>\\n</tr>\\n<tr>\\n<td><code class=\\\"language-text\\\">&lt;input type=&quot;checkbox&quot; checked /&gt;</code></td>\\n<td align=\\\"center\\\"><input type=\\\"checkbox\\\" checked /></td>\\n</tr>\\n<tr>\\n<td><code class=\\\"language-text\\\">&lt;input type=&quot;radio&quot; checked /&gt;</code></td>\\n<td align=\\\"center\\\"><input type=\\\"radio\\\" checked /></td>\\n</tr>\\n<tr>\\n<td><code class=\\\"language-text\\\">&lt;input type=&quot;checkbox&quot; disabled checked /&gt;</code></td>\\n<td align=\\\"center\\\"><input type=\\\"checkbox\\\" disabled checked /></td>\\n</tr>\\n<tr>\\n<td><code class=\\\"language-text\\\">&lt;input type=&quot;color&quot; value=&quot;#FF0000&quot; /&gt;</code></td>\\n<td align=\\\"center\\\"><input type=\\\"color\\\" value=\\\"#FF0000\\\" /></td>\\n</tr>\\n</tbody>\\n</table>\\n<p><code class=\\\"language-text\\\">input</code>s aren't the only ones to use attributes. In fact they are used everywhere in HTML. This is just to demonstrate to you what they look like and how certain attributes do certain things. If something isn't working for you, always check to see if you misspelled one of the tag names or attributes; that's an easy thing to mess up and hard to tell it happened.</p>\\n<h2 id=\\\"classes\\\"><a href=\\\"#classes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Classes</h2>\\n<p>Classes are special attributes that can go on any tag, though some you won't use it with. While a class does nothing itself, it allows that tag to be found by your CSS and your JavaScript. Using our house analogy, you don't want to make a rule that says \\\"all walls are south facing.\\\" It's nonsensical and you could never build a house that way. Instead, you'd make a rule that says \\\"walls marked <code class=\\\"language-text\\\">south-facing-wall</code> are south facing.\\\" This is what classes allow you to do: they allow you to mark your HTML so you can write rules and code to govern them later. Let's see what that looks like.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>header<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>header-title<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>My Great Blog<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>blog-posts<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-title<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>When Not to Overextend House Metaphors<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-text<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span> … <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-title<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>Another Great Blog Post<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-text<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span> … <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>What you see above is very typical looking HTML. Most tags will have classes. Now when I go to write CSS later, I can target <em>just</em> <code class=\\\"language-text\\\">post-title</code>s. If I wrote a rule targeting <code class=\\\"language-text\\\">h1</code>s, I'd get all the <code class=\\\"language-text\\\">post-title</code>s <strong>and</strong> the <code class=\\\"language-text\\\">header-title</code> as well. As you may imagine, you'll want the site header's h1 to look and act different than the blog post title, just like the headers in this lesson look different than the \\\"INTRO TO WEB DEV V2\\\" in the header.</p>\\n<h2 id=\\\"ids\\\"><a href=\\\"#ids\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>IDs</h2>\\n<p>IDs are far less useful than classes. Whereas you'll be using classes everywhere and frequently, you should be using IDs very sparingly. As you see in our above <code class=\\\"language-text\\\">blog-posts</code> HTML, we can <em>re-use</em> classes like <code class=\\\"language-text\\\">post</code> and <code class=\\\"language-text\\\">post-title</code>. This is <strong>extremely</strong> important. As a coder, you want a piece of code and use it a lot. As coders, we want to write as little code as possible (which we'll explore why later, for now trust me.) For now, be satisfied that I get to write a little bit of code that governs <code class=\\\"language-text\\\">post</code> and have it affect every <code class=\\\"language-text\\\">post</code> on the page.</p>\\n<p>Let's contrast that with IDs. When you designate something with an ID, you're affirming that <strong>this is the only one of those on your website</strong>. Not even just that page, but your whole website. <em>Sometimes</em> that is useful; just not very often. Some other coders and tutorials will tell you to <em>never</em> use IDs; I think that's misguided. IDs are a sledgehammer. Most problems don't require a sledgehammer. However sometimes you have problems that need a sledgehammer and then you're really grateful that you have one.</p>\\n<p>Let's see what an ID would look like:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>header<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>header-title<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>My Great Blog<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>blog-posts<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>house-metaphors-post<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-title<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>When Not to Overextend House Metaphors<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-text<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span> … <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-title<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>Another Great Blog Post<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-text<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span> … <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>Notice the first blog post has an <code class=\\\"language-text\\\">id</code> attribute in addition to its class. Notice I gave it a name <em>very</em> specific to that post; I can probably guarantee that the only house metaphor post on my website so that name works. Later we'll go more in depth on this, but you don't want to use CSS to tag IDs. You probably don't need to use JavaScript to target it; classes normally suffice.</p>\\n<p>So why do we have them? Well, they're really old and have been around forever so that's the mean reason. Another reason that <em>is</em> very useful about IDs is that I now can make a link that takes you directly to that ID in the page. Try clicking this <a href=\\\"#the-h1-part-way-down-the-page\\\">link</a> (it won't leave this page.)</p>\\n<h3 id=\\\"the-h1-part-way-down-the-page\\\">The link should bring you here.</h3>\\n<p>This is done using just an ID. The code for that link is: <code class=\\\"language-text\\\">&lt;a href=&quot;#the-h1-part-way-down-the-page&quot;&gt;link&lt;/a&gt;</code>. That <code class=\\\"language-text\\\">#</code> means go to that ID on the page.</p>\\n<h2 id=\\\"naming-and-tags-to-use\\\"><a href=\\\"#naming-and-tags-to-use\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Naming and Tags to Use</h2>\\n<p>You generally want to give things useful names. There's a saying in computer science that there are two hard things in computer science: cache invalidation, naming things, and off-by-one errors. (Cache invalidation is another topic for another day.) So if you struggle to come up with names for things like classes and IDs, you're not alone. As a programmer you get to name <em>a lot</em> of things.</p>\\n<p>Generally, with classes, you want to name things <em>semantically</em>. This is a fancy word (often used when talking about HTML) that you want use tags and name things as close to what thing <em>is</em> and <strong>not</strong> <em>what it looks like</em>.</p>\\n<p>Example, imagine this is a blog post on my website.</p>\\n<style>\\n  .post-title {\\n    color: red;\\n    font-size: 20px;\\n  }\\n  .post-title.green {\\n    color: limegreen;\\n  }\\n  .post-text {\\n    font-size: 14px;\\n  }\\n  .post {\\n    border: 3px solid #ccc;\\n    border-radius: 5px;\\n    max-width: 400px;\\n    padding: 10px;\\n  }\\n</style>\\n<article class=\\\"post\\\">\\n  <h1 class=\\\"post-title\\\">MY COOL BLOG POST TITLE</h1>\\n  <p class=\\\"post-text\\\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Sint exercitationem dignissimos veritatis, odit accusamus reiciendis dolorum ab harum dolorem ad et ducimus amet ut eos, itaque nostrum cumque magni soluta.</p>\\n</article>\\n<p>For the blog post title, what should I call the class? What tag should I use? I really can use any tag and it'll mechanically work. Using CSS, you can make pretty much any tag look and act like any other. So if it doesn't matter mechanically, why should it matter to me? The same reasons we layed out earlier:</p>\\n<ul>\\n<li>It makes the site accessible to everyone if you choose good tags. It's your responsibility to make sure the web remains accessible to everyone, including but not limited to: people with limited sight, limited motion of hands, arms or other limbs, limited hearing, and other permanent or temporary disabilities.</li>\\n<li>It'll make it easier for you to come back later and maintain your code or for someone else to understand what you did. Code is communication between you and future readers.</li>\\n<li>It makes it easier for Google, Bing, DuckDuckGo, etc. to crawl your website which means your site will rank higher.</li>\\n</ul>\\n<p>Given that, it means we need to choose a tag that means that's a title. In this case, we can use an <code class=\\\"language-text\\\">h1</code> because that is the main header of that subsection. For the name of the class (note screen readers and other accessibility tools <em>do not</em> read your class names or IDs; choosing good names here purely affects you and others working on this code.)</p>\\n<p>Okay, cool, so let's give that <code class=\\\"language-text\\\">h1</code> a good class name. How about <code class=\\\"language-text\\\">red-title</code>? It's a title and it's red; fits, right? While that may seem appropriate and fitting now, what if you need to change your blog's styling the following week and now that blog post looks like this:</p>\\n<article class=\\\"post\\\">\\n  <h1 class=\\\"post-title green\\\">MY COOL BLOG POST TITLE</h1>\\n  <p class=\\\"post-text\\\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Sint exercitationem dignissimos veritatis, odit accusamus reiciendis dolorum ab harum dolorem ad et ducimus amet ut eos, itaque nostrum cumque magni soluta.</p>\\n</article>\\n<p>If your title is still called <code class=\\\"language-text\\\">red-title</code>, you have a bit of a problem! Now your class name is not only not descriptive of what the item is, it's actually wrong which will make it way more confusing to you and other laters. Now, you may say that you can just change the class name when you go to update but believe me that's not a good option either. If you've used that class 1,000 times throughout your website (not that farfetched) you'd have to update 1,000 different things. No, it's better if we give it a good name the first time, descriptive of not <em>what it looks like</em> but descriptive of <em>what role it serves.</em> In this case, we could call it something like <code class=\\\"language-text\\\">blog-post-title</code> or <code class=\\\"language-text\\\">post-head</code> or something of that nature. That class then always be descriptive of what the thing <em>is</em> and not <em>what it looks like</em>.</p>\",\"frontmatter\":{\"path\":\"/html-next-steps\",\"title\":\"HTML Next Steps\",\"order\":4}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"frontmatter\":{\"order\":0,\"path\":\"/intro\",\"title\":\"Introduction to the Course\"}}},{\"node\":{\"frontmatter\":{\"order\":1,\"path\":\"/overview\",\"title\":\"Introduction to JavaScript?\"}}},{\"node\":{\"frontmatter\":{\"order\":2,\"path\":\"/tools\",\"title\":\"Systems\"}}},{\"node\":{\"frontmatter\":{\"order\":3,\"path\":\"/variable\",\"title\":\"What is Variable\"}}},{\"node\":{\"frontmatter\":{\"order\":4,\"path\":\"/html-next-steps\",\"title\":\"HTML Next Steps\"}}},{\"node\":{\"frontmatter\":{\"order\":5,\"path\":\"/meta-html\",\"title\":\"Meta HTML\"}}},{\"node\":{\"frontmatter\":{\"order\":6,\"path\":\"/basic-css\",\"title\":\"Basic CSS\"}}},{\"node\":{\"frontmatter\":{\"order\":7,\"path\":\"/selectors\",\"title\":\"CSS Selectors and the Cascade\"}}},{\"node\":{\"frontmatter\":{\"order\":8,\"path\":\"/layout-css\",\"title\":\"Layout CSS\"}}},{\"node\":{\"frontmatter\":{\"order\":9,\"path\":\"/css-patterns\",\"title\":\"Effective Patterns for Writing CSS\"}}},{\"node\":{\"frontmatter\":{\"order\":10,\"path\":\"/project-html-css\",\"title\":\"Project: HTML & CSS\"}}},{\"node\":{\"frontmatter\":{\"order\":11,\"path\":\"/programming-fundamentals\",\"title\":\"Programming Fundamentals\"}}},{\"node\":{\"frontmatter\":{\"order\":12,\"path\":\"/functions-and-scope\",\"title\":\"Functions and Scope\"}}},{\"node\":{\"frontmatter\":{\"order\":13,\"path\":\"/objects-and-arrays\",\"title\":\"Objects and Arrays\"}}},{\"node\":{\"frontmatter\":{\"order\":14,\"path\":\"/dom\",\"title\":\"The DOM\"}}},{\"node\":{\"frontmatter\":{\"order\":15,\"path\":\"/js-project\",\"title\":\"JavaScript, HTML, and CSS Project\"}}},{\"node\":{\"frontmatter\":{\"order\":16,\"path\":\"/ajax\",\"title\":\"AJAX\"}}},{\"node\":{\"frontmatter\":{\"order\":17,\"path\":\"/libraries\",\"title\":\"Integrating with Other People's Libraries\"}}},{\"node\":{\"frontmatter\":{\"order\":18,\"path\":\"/git-and-bash\",\"title\":\"Git and Bash\"}}},{\"node\":{\"frontmatter\":{\"order\":19,\"path\":\"/node\",\"title\":\"Node.js\"}}},{\"node\":{\"frontmatter\":{\"order\":20,\"path\":\"/deploying\",\"title\":\"Deploying Your App\"}}},{\"node\":{\"frontmatter\":{\"order\":21,\"path\":\"/final-thoughts\",\"title\":\"Final Thoughts\"}}}]}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---html-next-steps-6874292d1b5859a9dd76.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>We just discussed what the basic building block of HTML is: tags. We're going to explore a bit more about what you can do with tags and then we'll move on to CSS.</p>\\n<h2 id=\\\"attributes\\\"><a href=\\\"#attributes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Attributes</h2>\\n<p>Let's start with a text <code class=\\\"language-text\\\">input</code> tag. There are several types of <code class=\\\"language-text\\\">input</code>s that we discussed in the previous section: text, color, checkboxes, radio buttons, etc. How can the browser tell which is meant to be what? HTML attributes! Attributes are additional pieces of information that you can attach to HTML tags. We're going to use the <code class=\\\"language-text\\\">type</code> attribute to pass that to the browser.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>checkbox<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>color<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>file<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">type</code> is considered an attribute. Different tags have different attributes that they care about. For example, the <code class=\\\"language-text\\\">type</code> attribute is not useful with <code class=\\\"language-text\\\">p</code>, <code class=\\\"language-text\\\">div</code>, <code class=\\\"language-text\\\">h1</code>, etc. You can still put a <code class=\\\"language-text\\\">type</code> attribute on these tags; they'll just ignore them.</p>\\n<p>Exploring more on <code class=\\\"language-text\\\">input</code>s (since they have a bunch of attributes,) here are some interesting ones:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>: Code :</th>\\n<th align=\\\"center\\\">Example</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code class=\\\"language-text\\\">&lt;input value=&quot;This is a pre-filled value&quot; /&gt;</code></td>\\n<td align=\\\"center\\\"><input value=\\\"This is a pre-filled value\\\" /></td>\\n</tr>\\n<tr>\\n<td><code class=\\\"language-text\\\">&lt;input placeholder=&quot;This is a placeholder&quot; /&gt;</code></td>\\n<td align=\\\"center\\\"><input placeholder=\\\"This is a placeholder\\\" /></td>\\n</tr>\\n<tr>\\n<td><code class=\\\"language-text\\\">&lt;input type=&quot;checkbox&quot; checked /&gt;</code></td>\\n<td align=\\\"center\\\"><input type=\\\"checkbox\\\" checked /></td>\\n</tr>\\n<tr>\\n<td><code class=\\\"language-text\\\">&lt;input type=&quot;radio&quot; checked /&gt;</code></td>\\n<td align=\\\"center\\\"><input type=\\\"radio\\\" checked /></td>\\n</tr>\\n<tr>\\n<td><code class=\\\"language-text\\\">&lt;input type=&quot;checkbox&quot; disabled checked /&gt;</code></td>\\n<td align=\\\"center\\\"><input type=\\\"checkbox\\\" disabled checked /></td>\\n</tr>\\n<tr>\\n<td><code class=\\\"language-text\\\">&lt;input type=&quot;color&quot; value=&quot;#FF0000&quot; /&gt;</code></td>\\n<td align=\\\"center\\\"><input type=\\\"color\\\" value=\\\"#FF0000\\\" /></td>\\n</tr>\\n</tbody>\\n</table>\\n<p><code class=\\\"language-text\\\">input</code>s aren't the only ones to use attributes. In fact they are used everywhere in HTML. This is just to demonstrate to you what they look like and how certain attributes do certain things. If something isn't working for you, always check to see if you misspelled one of the tag names or attributes; that's an easy thing to mess up and hard to tell it happened.</p>\\n<h2 id=\\\"classes\\\"><a href=\\\"#classes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Classes</h2>\\n<p>Classes are special attributes that can go on any tag, though some you won't use it with. While a class does nothing itself, it allows that tag to be found by your CSS and your JavaScript. Using our house analogy, you don't want to make a rule that says \\\"all walls are south facing.\\\" It's nonsensical and you could never build a house that way. Instead, you'd make a rule that says \\\"walls marked <code class=\\\"language-text\\\">south-facing-wall</code> are south facing.\\\" This is what classes allow you to do: they allow you to mark your HTML so you can write rules and code to govern them later. Let's see what that looks like.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>header<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>header-title<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>My Great Blog<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>blog-posts<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-title<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>When Not to Overextend House Metaphors<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-text<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span> … <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-title<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>Another Great Blog Post<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-text<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span> … <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>What you see above is very typical looking HTML. Most tags will have classes. Now when I go to write CSS later, I can target <em>just</em> <code class=\\\"language-text\\\">post-title</code>s. If I wrote a rule targeting <code class=\\\"language-text\\\">h1</code>s, I'd get all the <code class=\\\"language-text\\\">post-title</code>s <strong>and</strong> the <code class=\\\"language-text\\\">header-title</code> as well. As you may imagine, you'll want the site header's h1 to look and act different than the blog post title, just like the headers in this lesson look different than the \\\"INTRO TO WEB DEV V2\\\" in the header.</p>\\n<h2 id=\\\"ids\\\"><a href=\\\"#ids\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>IDs</h2>\\n<p>IDs are far less useful than classes. Whereas you'll be using classes everywhere and frequently, you should be using IDs very sparingly. As you see in our above <code class=\\\"language-text\\\">blog-posts</code> HTML, we can <em>re-use</em> classes like <code class=\\\"language-text\\\">post</code> and <code class=\\\"language-text\\\">post-title</code>. This is <strong>extremely</strong> important. As a coder, you want a piece of code and use it a lot. As coders, we want to write as little code as possible (which we'll explore why later, for now trust me.) For now, be satisfied that I get to write a little bit of code that governs <code class=\\\"language-text\\\">post</code> and have it affect every <code class=\\\"language-text\\\">post</code> on the page.</p>\\n<p>Let's contrast that with IDs. When you designate something with an ID, you're affirming that <strong>this is the only one of those on your website</strong>. Not even just that page, but your whole website. <em>Sometimes</em> that is useful; just not very often. Some other coders and tutorials will tell you to <em>never</em> use IDs; I think that's misguided. IDs are a sledgehammer. Most problems don't require a sledgehammer. However sometimes you have problems that need a sledgehammer and then you're really grateful that you have one.</p>\\n<p>Let's see what an ID would look like:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>header<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>header-title<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>My Great Blog<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>blog-posts<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>house-metaphors-post<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-title<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>When Not to Overextend House Metaphors<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-text<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span> … <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-title<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>Another Great Blog Post<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>post-text<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span> … <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>Notice the first blog post has an <code class=\\\"language-text\\\">id</code> attribute in addition to its class. Notice I gave it a name <em>very</em> specific to that post; I can probably guarantee that the only house metaphor post on my website so that name works. Later we'll go more in depth on this, but you don't want to use CSS to tag IDs. You probably don't need to use JavaScript to target it; classes normally suffice.</p>\\n<p>So why do we have them? Well, they're really old and have been around forever so that's the mean reason. Another reason that <em>is</em> very useful about IDs is that I now can make a link that takes you directly to that ID in the page. Try clicking this <a href=\\\"#the-h1-part-way-down-the-page\\\">link</a> (it won't leave this page.)</p>\\n<h3 id=\\\"the-h1-part-way-down-the-page\\\">The link should bring you here.</h3>\\n<p>This is done using just an ID. The code for that link is: <code class=\\\"language-text\\\">&lt;a href=&quot;#the-h1-part-way-down-the-page&quot;&gt;link&lt;/a&gt;</code>. That <code class=\\\"language-text\\\">#</code> means go to that ID on the page.</p>\\n<h2 id=\\\"naming-and-tags-to-use\\\"><a href=\\\"#naming-and-tags-to-use\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Naming and Tags to Use</h2>\\n<p>You generally want to give things useful names. There's a saying in computer science that there are two hard things in computer science: cache invalidation, naming things, and off-by-one errors. (Cache invalidation is another topic for another day.) So if you struggle to come up with names for things like classes and IDs, you're not alone. As a programmer you get to name <em>a lot</em> of things.</p>\\n<p>Generally, with classes, you want to name things <em>semantically</em>. This is a fancy word (often used when talking about HTML) that you want use tags and name things as close to what thing <em>is</em> and <strong>not</strong> <em>what it looks like</em>.</p>\\n<p>Example, imagine this is a blog post on my website.</p>\\n<style>\\n  .post-title {\\n    color: red;\\n    font-size: 20px;\\n  }\\n  .post-title.green {\\n    color: limegreen;\\n  }\\n  .post-text {\\n    font-size: 14px;\\n  }\\n  .post {\\n    border: 3px solid #ccc;\\n    border-radius: 5px;\\n    max-width: 400px;\\n    padding: 10px;\\n  }\\n</style>\\n<article class=\\\"post\\\">\\n  <h1 class=\\\"post-title\\\">MY COOL BLOG POST TITLE</h1>\\n  <p class=\\\"post-text\\\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Sint exercitationem dignissimos veritatis, odit accusamus reiciendis dolorum ab harum dolorem ad et ducimus amet ut eos, itaque nostrum cumque magni soluta.</p>\\n</article>\\n<p>For the blog post title, what should I call the class? What tag should I use? I really can use any tag and it'll mechanically work. Using CSS, you can make pretty much any tag look and act like any other. So if it doesn't matter mechanically, why should it matter to me? The same reasons we layed out earlier:</p>\\n<ul>\\n<li>It makes the site accessible to everyone if you choose good tags. It's your responsibility to make sure the web remains accessible to everyone, including but not limited to: people with limited sight, limited motion of hands, arms or other limbs, limited hearing, and other permanent or temporary disabilities.</li>\\n<li>It'll make it easier for you to come back later and maintain your code or for someone else to understand what you did. Code is communication between you and future readers.</li>\\n<li>It makes it easier for Google, Bing, DuckDuckGo, etc. to crawl your website which means your site will rank higher.</li>\\n</ul>\\n<p>Given that, it means we need to choose a tag that means that's a title. In this case, we can use an <code class=\\\"language-text\\\">h1</code> because that is the main header of that subsection. For the name of the class (note screen readers and other accessibility tools <em>do not</em> read your class names or IDs; choosing good names here purely affects you and others working on this code.)</p>\\n<p>Okay, cool, so let's give that <code class=\\\"language-text\\\">h1</code> a good class name. How about <code class=\\\"language-text\\\">red-title</code>? It's a title and it's red; fits, right? While that may seem appropriate and fitting now, what if you need to change your blog's styling the following week and now that blog post looks like this:</p>\\n<article class=\\\"post\\\">\\n  <h1 class=\\\"post-title green\\\">MY COOL BLOG POST TITLE</h1>\\n  <p class=\\\"post-text\\\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Sint exercitationem dignissimos veritatis, odit accusamus reiciendis dolorum ab harum dolorem ad et ducimus amet ut eos, itaque nostrum cumque magni soluta.</p>\\n</article>\\n<p>If your title is still called <code class=\\\"language-text\\\">red-title</code>, you have a bit of a problem! Now your class name is not only not descriptive of what the item is, it's actually wrong which will make it way more confusing to you and other laters. Now, you may say that you can just change the class name when you go to update but believe me that's not a good option either. If you've used that class 1,000 times throughout your website (not that farfetched) you'd have to update 1,000 different things. No, it's better if we give it a good name the first time, descriptive of not <em>what it looks like</em> but descriptive of <em>what role it serves.</em> In this case, we could call it something like <code class=\\\"language-text\\\">blog-post-title</code> or <code class=\\\"language-text\\\">post-head</code> or something of that nature. That class then always be descriptive of what the thing <em>is</em> and not <em>what it looks like</em>.</p>\",\"frontmatter\":{\"path\":\"/html-next-steps\",\"title\":\"HTML Next Steps\",\"order\":4}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"frontmatter\":{\"order\":0,\"path\":\"/intro\",\"title\":\"Introduction to the Course\"}}},{\"node\":{\"frontmatter\":{\"order\":1,\"path\":\"/overview\",\"title\":\"Introduction to JavaScript?\"}}},{\"node\":{\"frontmatter\":{\"order\":2,\"path\":\"/tools\",\"title\":\"Systems\"}}},{\"node\":{\"frontmatter\":{\"order\":3,\"path\":\"/variable\",\"title\":\"What is Variable\"}}},{\"node\":{\"frontmatter\":{\"order\":4,\"path\":\"/html-next-steps\",\"title\":\"HTML Next Steps\"}}},{\"node\":{\"frontmatter\":{\"order\":5,\"path\":\"/meta-html\",\"title\":\"Meta HTML\"}}},{\"node\":{\"frontmatter\":{\"order\":6,\"path\":\"/basic-css\",\"title\":\"Basic CSS\"}}},{\"node\":{\"frontmatter\":{\"order\":7,\"path\":\"/selectors\",\"title\":\"CSS Selectors and the Cascade\"}}},{\"node\":{\"frontmatter\":{\"order\":8,\"path\":\"/layout-css\",\"title\":\"Layout CSS\"}}},{\"node\":{\"frontmatter\":{\"order\":9,\"path\":\"/css-patterns\",\"title\":\"Effective Patterns for Writing CSS\"}}},{\"node\":{\"frontmatter\":{\"order\":10,\"path\":\"/project-html-css\",\"title\":\"Project: HTML & CSS\"}}},{\"node\":{\"frontmatter\":{\"order\":11,\"path\":\"/programming-fundamentals\",\"title\":\"Programming Fundamentals\"}}},{\"node\":{\"frontmatter\":{\"order\":12,\"path\":\"/functions-and-scope\",\"title\":\"Functions and Scope\"}}},{\"node\":{\"frontmatter\":{\"order\":13,\"path\":\"/objects-and-arrays\",\"title\":\"Objects and Arrays\"}}},{\"node\":{\"frontmatter\":{\"order\":14,\"path\":\"/dom\",\"title\":\"The DOM\"}}},{\"node\":{\"frontmatter\":{\"order\":15,\"path\":\"/js-project\",\"title\":\"JavaScript, HTML, and CSS Project\"}}},{\"node\":{\"frontmatter\":{\"order\":16,\"path\":\"/ajax\",\"title\":\"AJAX\"}}},{\"node\":{\"frontmatter\":{\"order\":17,\"path\":\"/libraries\",\"title\":\"Integrating with Other People's Libraries\"}}},{\"node\":{\"frontmatter\":{\"order\":18,\"path\":\"/git-and-bash\",\"title\":\"Git and Bash\"}}},{\"node\":{\"frontmatter\":{\"order\":19,\"path\":\"/node\",\"title\":\"Node.js\"}}},{\"node\":{\"frontmatter\":{\"order\":20,\"path\":\"/deploying\",\"title\":\"Deploying Your App\"}}},{\"node\":{\"frontmatter\":{\"order\":21,\"path\":\"/final-thoughts\",\"title\":\"Final Thoughts\"}}}]}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/html-next-steps.json\n// module id = 468\n// module chunks = 246320047195911"],"sourceRoot":""}